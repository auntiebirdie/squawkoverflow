  <div id="modal_editBirdyPet" class="modal" tabindex="-1">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Quick Edit BirdyPet</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <div class="p-1 mb-3 birdypets text-center"></div>

            <h5><label>Nickname</label></h5>
            <input type="text" name="nickname" class="form-control mb-3" style="width: 100%">

            <h5><label>Description</label></h5>
            <textarea name="description" maxlength="500" class="form-control mb-3" style="height: 150px; width: 100%;"></textarea>

           <% if (member.flocks) { %>
            <h5><label>Flocks</label></h5>
            <% for (var flock of member.flocks) { %>
            <p>
              <label>
                <input type="checkbox" name="flocks" class="form-check-input" value="<%= flock.id%>">
                &nbsp;
                <%= flock.name %>
              </label>
            </p>
            <% } %>
          <% } %>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-dark" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-success disabled">Save</button>
        </div>
      </div>
    </div>    
  </div>

  <script>
    var modal_editBirdyPet = new bootstrap.Modal(document.getElementById('modal_editBirdyPet'));

    $(document).ready(() => {
      $('#modal_editBirdyPet').on('show.bs.modal', function (event) {
        var button = event.relatedTarget;

        $('.modal-body', modal_editBirdyPet._element).addClass('loadingData');

        API.call('birdypet', 'GET', { id : button.getAttribute('data-id'), member: '<%= loggedInUser.id %>', include: ['memberData', 'variants'] }, (birdypet) => {
          $('.modal-title', modal_editBirdyPet._element).html('Quick Edit - ' + (birdypet.nickname ? birdypet.nickname : birdypet.bird.commonName));
          $('input[name="nickname"]', modal_editBirdyPet._element).val(birdypet.nickname);
          $('textarea[name="description"]', modal_editBirdyPet._element).val(birdypet.description);

          for (let flock of birdypet.flocks) {
            $('input[name="flocks"][value="' + flock + '"]').prop('checked', true);
          }

          if (!birdypet.variant.special) {
            $('.birdypets', modal_editBirdyPet._element).html(birdypet.bird.variants.filter((variant) => !variant.special).map(function (variant) { return '<div data-id="' + variant.id + '" class="' + (variant.id == birdypet.variant.id ? 'border border-4 border-primary' : '') + ' lazy birdypet mini checkmark' + (variant.hatched >= 2 ? 2 : variant.hatched) + '" data-bg="' + variant.image + '"></div>'; }).join(""));

            lazyLoadInstance.update();
          }

          $('.btn-success', modal_editBirdyPet._element).removeClass('disabled').attr('data-id', button.getAttribute('data-id'));
          $('.modal-body', modal_editBirdyPet._element).removeClass('loadingData');
        });
      }).on('hidden.bs.modal', function (event) {
        $('.modal-title', modal_editBirdyPet._element).html('Quick Edit Birdypet');
        $('input[name="nickname"]', modal_editBirdyPet._element).val('');
        $('textarea[name="description"]', modal_editBirdyPet._element).val('');

        $('input[type="checkbox"]', modal_editBirdyPet._element).prop('checked', false);

        $('.btn-success', modal_editBirdyPet._element).addClass('disabled').attr('data-id', null);
      }).on('click', '.btn-success', function (event) {
        if (!event.target.classList.contains('disabled')) {
          $('.btn-success', modal_editBirdyPet._element).addClass('disabled');
          $('.modal-body', modal_editBirdyPet._element).addClass('loadingData');

          API.call('birdypet', 'PUT', {
            birdypet: event.target.getAttribute('data-id'),
            nickname: $('input[name="nickname"]', modal_editBirdyPet._element).val(),
            description: $('textarea[name="description"]', modal_editBirdyPet._element).val(),
            flocks: $('input[type="checkbox"]:checked', modal_editBirdyPet._element).map(function () { return this.value }).get(),
            variant: $('.birdypet.border-primary', modal_editBirdyPet._element).attr('data-id')
          }, (birdypet) => {
            if (typeof template != "undefined") {
              $('div[data-id="' + birdypet.id + '"]').replaceWith(template((birdypet)));
              lazyLoadInstance.update();
            }
            else {
              $('#birdy').attr('src', $('.birdypet.border-primary', modal_editBirdyPet._element).attr('data-bg'));
            }
            modal_editBirdyPet.hide();
          });
        }
      }).on('click', '.birdypet.mini', function (event) {
        if (!event.target.parentNode.parentNode.classList.contains('loadingData')) {
          $('.birdypet.border-primary', modal_editBirdyPet._element).removeClass('border border-4 border-primary');

          event.target.classList.add('border', 'border-4', 'border-primary');
        }
      });
    });
  </script>
