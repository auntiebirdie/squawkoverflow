<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.appear/0.4.1/jquery.appear.min.js" integrity="sha512-vYYoQJKYzaJQaOaYxaJhhmxikOJ2SEgHwmCNa0EMP0aRr7opdt4HHrorAwnCyPm8bdW/JBApIomo85YaBX81zA==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
  var urlParams = new URLSearchParams(window.location.search);
  var container = document.getElementById('lazyLoader');
  var endpoint = container.getAttribute('data-endpoint');
  var search = document.getElementById('search');
  var families = document.getElementById('family');
  var currentPage = <%= locals.paginate || 1 %>;
  var totalPages = 0;
  var timeout;

  function template (bird) {
    return `<%- include(locals.template ? template : '../templates/birdypet.ejs') %>`;
  }

  $(document).ready( function () {
    var preset = Object.fromEntries(urlParams.entries());

    for (var key in preset) {
      $(`#${key}`).val(preset[key]);
    }

    updateResults();

    $('select', '#controls').on('change', resetResults);

    $('#search').on('change', function () {
      clearTimeout(timeout);

      timeout = setTimeout(resetResults, 500);
    });
  });

 <% if (locals.paginate) { %>
  $('.pagination').on('click', '.page-link', function (e) {
    resetResults(null, e.currentTarget.innerHTML);
  });
 <% } %>

  function resetResults (event, page = 1) {
    container.innerHTML = "";
   <% if (locals.paginate) { %>
    document.querySelectorAll('.pagination')[1].style.visibility = 'hidden';
   <% } %>
    currentPage = page * 1;
    totalPages = 1;
    updateResults();
  }

  function updateResults () {
    container.classList.add('loadingData');

    var sort = $('#sort option:selected');
    var flock = $('#flock option:selected');

    <% if (!locals.skipParams) { %>
      <% if (locals.paginate) { %>
        urlParams.set('page', currentPage);
      <% } %>

    $('select', '#controls').each( (i, select) => {
      var value = select.options[select.options.selectedIndex].value;

      if (value) {
        urlParams.set(select.id, select.options[select.options.selectedIndex].value);
      }
      else {
        urlParams.delete(select.id);
      }
    });

    window.history.replaceState(null, '', window.location.pathname + '?' + urlParams.toString());
    <% } %>

    $.ajax({
      url: endpoint,
      data: Object.assign({
        page: currentPage * 1,
        sort: JSON.stringify(sort.val() && sort.val().includes('-') ? [sort.val().split('-').shift(), sort.val().split('-').pop()] : [sort.val()]),
        family : $('#family').is(':visible') ? $('#family').val() : "",
        flock : flock && !flock.attr('data-special') ? flock.val() : "",
        search : $('#search').val(),
        <%- locals.egg ? `adjectives : "${egg.name}",` : "" %>
        },
        container.getAttribute('data-params') ? JSON.parse(container.getAttribute('data-params')) : {}
      ),
      method: "GET",
      dataType: "json",
      success: function (data) {
        totalPages = data.totalPages * 1;

        if (data.results.length > 0 ) {
          for (var result of data.results) {
            container.innerHTML += template(result);
          }

         <% if (locals.families) { %>
          if (data.families) {
            var sortedFamilies = {
              active: [],
              disabled: []
            };

            <%- JSON.stringify(families.sort()) %>.forEach( function (family) {
              sortedFamilies[data.families.includes(family) ? 'active' : 'disabled'].push(family);
            });

            sortedFamilies = [...sortedFamilies.active, ...sortedFamilies.disabled];

            for (let i = 0, len = sortedFamilies.length; i < len; i++) {
              let option = families.querySelector(`option[value="${sortedFamilies[i]}"]`);
              let sibling = families.querySelector(`option[value="%{sortedFamiles[i > 0 ? i - 1 : i + 1]}"]`);

              option.disabled = !data.families.includes(option.value);

              families.insertBefore(option, sibling);
            };
          }
         <% } %>

          lazyLoadInstance.update();

         <% if (locals.paginate) { %>
           updatePagination();
           container.classList.remove('loadingData');
         <% } else { %>
          var lastElement = $('#lazyLoader > div').last();

          if (lastElement.is(':appeared')) {
            currentPage++;
            updateResults();
          }
          else {
            container.classList.remove('loadingData');
            lastElement.appear().one('appear', function (event) {
              currentPage++;
              updateResults();
            });
          }
         <% } %>
        }
        else {
          container.classList.remove('loadingData');

          if (container.childNodes.length == 0) {
             container.innerHTML = '<p class="text-center"><em><%= locals.noResultsFound ? noResultsFound : 'No birdies match the selected criteria.  Where could they be hiding?' %></em></p>';
          }
        }
      }
    });
  }

  function updatePagination () {
    var paginations = document.querySelectorAll('.pagination');
    var content = "";

    if (currentPage > 4) {
      content += `<li class="page-item"><a class="page-link">1</a></li>`;
    }

    if (currentPage > 5) {
      content += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
    }

    for (let i = Math.max(1, currentPage - 3), len = Math.min(totalPages, currentPage + 3); i <= len; i++) {
      content += `<li class="page-item${currentPage == i ? ' active' : ''}"><a class="page-link">${i}</a></li>`;
    }

    if (currentPage < totalPages - 4) {
      content += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
    }

    if (currentPage < totalPages - 3) {
      content += `<li class="page-item"><a class="page-link">${totalPages}</a></li>`;
    }

    for (let pagination of paginations) {
      pagination.innerHTML = content;
      pagination.style.visibility = 'visible';
    }
  }
</script>
