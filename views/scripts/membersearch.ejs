<script type="text/javascript">
  var memberSearch, memberButton, memberDisplay;
  var selectedMember = <%- locals.selectedMember ? JSON.stringify(selectedMember) : 'null' %>;
  var _TRAPCARD = false;

  $(document).ready(function () {
    memberSearch = $('#memberSearch .typeahead');
    memberButton = $('#memberButton');
    memberDisplay = $('#memberDisplay');

    setupMemberSearch();

    $('#memberSearch').on('change', 'input[type="checkbox"]', function () {
      let query = memberSearch.typeahead('val');

      _TRAPCARD = true;

      memberSearch.typeahead('val', '.').typeahead('val', query);
    });
  });

  function setupMemberSearch () {
    memberSearch.typeahead({
      hint: false,
      highlight: true,
      minLength: 0
    },
    {
      name: 'members',
      displayKey: 'username',
      async: true,
      source: function (query, syncResults, asyncResults) {
        return new Promise((resolve, reject) => {
          if (_TRAPCARD) {
            _TRAPCARD = false;
            return resolve([]);
          }

          let data = {
            search: query,
            bird: $('#memberSearch').attr('data-bird') || "",
            filters: ['active'],
            sort: 'activeAt',
            <%- locals.include ? `include: ${JSON.stringify(include)},` : "" %>
            <%- locals.privacy ? `privacy: ${JSON.stringify(privacy)},` : "" %>
          };

            API.call('members', 'GET', data, function (results) {
              resolve(results);
            });
        }).then((results) => {
          try {
            let wants = document.getElementById('member-wants').checked;
            let needs = document.getElementById('member-needs').checked;

            if (wants && needs) {
              results = results.filter((result) => result.wishlisted > 0);
            }
            else if (wants || needs) {
              results = results.filter((result) => result.wishlisted == (wants ? 1 : 2));
            }
          } catch (err) { }

          asyncResults(results.sort((a, b) => a.wishlisted == b.wishlisted ? a.owned - b.owned : b.wishlisted - a.wishlisted));
        });
      },
      limit: Infinity,
      templates: {
        empty: function () {
          return '<div class="px-1 py-2"><em>No members found.</em></div>';
        },
        pending: function () {
          return '<div class="mx-1 fst-italic"><div class="spinner-border spinner-border-sm" role="status"></div> Searching...</div>';
        },
        suggestion: function (data) {
          var text = '<div class="px-1 py-2">';

          text += `<img src="${data.avatar}" class="rounded" width="42" onerror="missingMemberAvatar(this)"> ${data.username}`;

          if (data.owned > 1) {
            text += `<div class="small ms-5"><span class="checkplus"></span> <em>Multiple in aviary</em></div>`;
          }
          else if (data.owned == 1) {
            text += `<div class="small ms-5"><span class="checkmark"></span> <em>In aviary</em></div>`;
          }

          if (data.wishlisted) {
            switch (data.wishlisted) {
              case 2:
                text += `<div class="small ms-5">üåü <em>Needs it</em></div>`;
                break;
              case 1:
                text += `<div class="small ms-5">‚ù§Ô∏è <em>Wants it</em></div>`;
                break;
            }
          }

          text += '</div>';

          return text;
        }
      }
    }).on('typeahead:selected', function (obj, member) {
      selectedMember = member;

      updateMemberDisplay();
    }).on('typeahead:autocomplete', function (obj, member) {
      selectedMember = member;

      updateMemberDisplay();
    }).on('typeahead:change', function (obj, member) {
      if (selectedMember.username != member) {
        selectedMember = null;

        updateMemberDisplay();
      }
    });

    function updateMemberDisplay() {
      if (selectedMember) {
        memberDisplay.html(`<h3><img src="${selectedMember.avatar}" class="rounded" width="75" data-id="${selectedMember.id}" onerror="missingMemberAvatar(this)"> ${selectedMember.username}</h3>`);
        memberButton.attr('disabled', false);
      }
      else {
        memberDisplay.html("");
        memberButton.attr('disabled', true);
      }
    }
  }
</script>
